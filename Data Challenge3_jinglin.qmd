---
title: "Data Challenge 3"
author: "Jing Lin"
format: html
editor: visual
---

```{r,echo=FALSE}
knitr::opts_chunk$set(cache=TRUE, error=FALSE, message=FALSE, warning=FALSE,
                      echo=T, tidy.opts=list(width.cutoff=60),tidy=TRUE)

```

```{r}
# Load necessary libraries
library(dplyr)
library(purrr)
library(knitr)
library(Hmisc)  # For cut2
library(tidyr)  # For replace_na
library(readr) 
library(ggplot2)
```

```{r}
# Load coffee ratings data
coffee_ratings <- read.csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-07/coffee_ratings.csv')

# Clean and transform data
coffee_ratings_cleaned <- coffee_ratings %>%
  mutate(
    across(everything(), ~ replace_na(as.character(.), "Missing")),
    altitude_mean_meters = as.numeric(gsub("[^0-9.]", "", altitude_mean_meters)), # Remove non-numeric characters
    binned_mean_altitude = cut2(altitude_mean_meters, g = 4),  # Automatically bins into 4 groups
    binned_mean_altitude = replace_na(as.character(binned_mean_altitude), "Missing"),
    across(aroma:moisture, as.numeric)
  )

# Function to calculate mean and standard deviation
calc_mean_sd <- function(x) {
  mean_val <- mean(x, na.rm = TRUE)
  sd_val <- sd(x, na.rm = TRUE)
  paste("Mean:", round(mean_val, 2), ", SD:", round(sd_val, 2))
}

# Function to create summary table by grouping variable
summary_table <- function(data, group_var) {
  data %>%
    group_by(!!sym(group_var)) %>%
    summarise(across(aroma:moisture, calc_mean_sd), .groups = 'drop') %>%
    kable(caption = paste("Summary by", group_var))
}

# Define grouping variables
group_vars <- c("species", "country_of_origin", "binned_mean_altitude")

# Calculate summary tables using map
summary_tables <- map(group_vars, ~ summary_table(coffee_ratings_cleaned, .x))

# Display summary tables
summary_tables[[1]]  # Summary by species
summary_tables[[2]]  # Summary by country of origin
summary_tables[[3]]  # Summary by binned mean altitude
```

Problem2

```{r}

# Function to remove outliers based on IQR
remove_outliers <- function(data, var) {
  q1 <- quantile(data[[var]], 0.25, na.rm = TRUE)
  q3 <- quantile(data[[var]], 0.75, na.rm = TRUE)
  iqr <- q3 - q1
  data %>% filter(data[[var]] >= (q1 - 1.5 * iqr) & data[[var]] <= (q3 + 1.5 * iqr))
}

# Function to create scatter plot
scatter_plot <- function(data, x_var, y_var, group_var) {
  data <- remove_outliers(data, x_var) %>%
          remove_outliers(y_var)  # Remove outliers for both x and y variables
  ggplot(data, aes_string(x = x_var, y = y_var, color = group_var)) +
    geom_jitter(alpha = 0.6, width = 0.2, height = 0.2) +
    labs(
      title = paste(gsub("_", " ", x_var), "vs", gsub("_", " ", y_var), "colored by", gsub("_", " ", group_var)),
      x = gsub("_", " ", x_var),
      y = gsub("_", " ", y_var),
      color = gsub("_", " ", group_var)
    ) +
    theme_minimal()
}

# Define plot specifications as a tibble to use with pmap
plot_specs <- tibble(
  data = list(coffee_ratings_cleaned, coffee_ratings_cleaned),
  x_var = c("aroma", "balance"),
  y_var = c("flavor", "body"),
  group_var = c("species", "binned_mean_altitude")
)

# Generate and display plots using pmap
plots <- pmap(plot_specs, scatter_plot)

# Display each plot
print(plots[[1]])  # Aroma vs Flavor colored by Species
print(plots[[2]])  # Balance vs Body colored by Binned Mean Altitude
```
